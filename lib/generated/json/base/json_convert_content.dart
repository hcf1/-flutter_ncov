// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:chapter13/model/home_model.dart';
import 'package:chapter13/generated/json/home_model_helper.dart';
import 'package:chapter13/model/trend_model.dart';
import 'package:chapter13/generated/json/trend_model_helper.dart';
import 'package:chapter13/model/rumours_model.dart';
import 'package:chapter13/generated/json/rumours_model_helper.dart';
import 'package:chapter13/model/map_domestic_model.dart';
import 'package:chapter13/generated/json/map_domestic_model_helper.dart';
import 'package:chapter13/model/find_wiki_model.dart';
import 'package:chapter13/generated/json/find_wiki_model_helper.dart';
import 'package:chapter13/model/home_banner_model.dart';
import 'package:chapter13/generated/json/home_banner_model_helper.dart';
import 'package:chapter13/model/home_rumour_model.dart';
import 'package:chapter13/generated/json/home_rumour_model_helper.dart';
import 'package:chapter13/model/map_distribute_model.dart';
import 'package:chapter13/generated/json/map_distribute_model_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case HomeModel:
			return homeModelFromJson(data as HomeModel, json) as T;			case HomeMarquee:
			return homeMarqueeFromJson(data as HomeMarquee, json) as T;			case HomeQuanguoTrendChart:
			return homeQuanguoTrendChartFromJson(data as HomeQuanguoTrendChart, json) as T;			case HomeHbFeiHbTrendChart:
			return homeHbFeiHbTrendChartFromJson(data as HomeHbFeiHbTrendChart, json) as T;			case HomeForeignTrendChart:
			return homeForeignTrendChartFromJson(data as HomeForeignTrendChart, json) as T;			case HomeImportantForeignTrendChart:
			return homeImportantForeignTrendChartFromJson(data as HomeImportantForeignTrendChart, json) as T;			case HomeForeignTrendChartGlobal:
			return homeForeignTrendChartGlobalFromJson(data as HomeForeignTrendChartGlobal, json) as T;			case HomeImportantForeignTrendChartGlobal:
			return homeImportantForeignTrendChartGlobalFromJson(data as HomeImportantForeignTrendChartGlobal, json) as T;			case HomeForeignStatistics:
			return homeForeignStatisticsFromJson(data as HomeForeignStatistics, json) as T;			case HomeGlobalStatistics:
			return homeGlobalStatisticsFromJson(data as HomeGlobalStatistics, json) as T;			case TrendModel:
			return trendModelFromJson(data as TrendModel, json) as T;			case TrendNewslist:
			return trendNewslistFromJson(data as TrendNewslist, json) as T;			case RumoursModel:
			return rumoursModelFromJson(data as RumoursModel, json) as T;			case RumoursNews:
			return rumoursNewsFromJson(data as RumoursNews, json) as T;			case MapDomesticModel:
			return mapDomesticModelFromJson(data as MapDomesticModel, json) as T;			case MapDomesticNewslist:
			return mapDomesticNewslistFromJson(data as MapDomesticNewslist, json) as T;			case MapDomesticNewslistCity:
			return mapDomesticNewslistCityFromJson(data as MapDomesticNewslistCity, json) as T;			case FindWikiModel:
			return findWikiModelFromJson(data as FindWikiModel, json) as T;			case FindWikiResult:
			return findWikiResultFromJson(data as FindWikiResult, json) as T;			case HomeBannerModel:
			return homeBannerModelFromJson(data as HomeBannerModel, json) as T;			case HomeBannerData:
			return homeBannerDataFromJson(data as HomeBannerData, json) as T;			case HomeRumourModel:
			return homeRumourModelFromJson(data as HomeRumourModel, json) as T;			case MapDistributeModel:
			return mapDistributeModelFromJson(data as MapDistributeModel, json) as T;			case MapDistribute:
			return mapDistributeResultFromJson(data as MapDistribute, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case HomeModel:
			return homeModelToJson(data as HomeModel);			case HomeMarquee:
			return homeMarqueeToJson(data as HomeMarquee);			case HomeQuanguoTrendChart:
			return homeQuanguoTrendChartToJson(data as HomeQuanguoTrendChart);			case HomeHbFeiHbTrendChart:
			return homeHbFeiHbTrendChartToJson(data as HomeHbFeiHbTrendChart);			case HomeForeignTrendChart:
			return homeForeignTrendChartToJson(data as HomeForeignTrendChart);			case HomeImportantForeignTrendChart:
			return homeImportantForeignTrendChartToJson(data as HomeImportantForeignTrendChart);			case HomeForeignTrendChartGlobal:
			return homeForeignTrendChartGlobalToJson(data as HomeForeignTrendChartGlobal);			case HomeImportantForeignTrendChartGlobal:
			return homeImportantForeignTrendChartGlobalToJson(data as HomeImportantForeignTrendChartGlobal);			case HomeForeignStatistics:
			return homeForeignStatisticsToJson(data as HomeForeignStatistics);			case HomeGlobalStatistics:
			return homeGlobalStatisticsToJson(data as HomeGlobalStatistics);			case TrendModel:
			return trendModelToJson(data as TrendModel);			case TrendNewslist:
			return trendNewslistToJson(data as TrendNewslist);			case RumoursModel:
			return rumoursModelToJson(data as RumoursModel);			case RumoursNews:
			return rumoursNewsToJson(data as RumoursNews);			case MapDomesticModel:
			return mapDomesticModelToJson(data as MapDomesticModel);			case MapDomesticNewslist:
			return mapDomesticNewslistToJson(data as MapDomesticNewslist);			case MapDomesticNewslistCity:
			return mapDomesticNewslistCityToJson(data as MapDomesticNewslistCity);			case FindWikiModel:
			return findWikiModelToJson(data as FindWikiModel);			case FindWikiResult:
			return findWikiResultToJson(data as FindWikiResult);			case HomeBannerModel:
			return homeBannerModelToJson(data as HomeBannerModel);			case HomeBannerData:
			return homeBannerDataToJson(data as HomeBannerData);			case HomeRumourModel:
			return homeRumourModelToJson(data as HomeRumourModel);			case MapDistributeModel:
			return mapDistributeModelToJson(data as MapDistributeModel);			case MapDistribute:
			return mapDistributeResultToJson(data as MapDistribute);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'HomeModel':
			return HomeModel().fromJson(json);			case 'HomeMarquee':
			return HomeMarquee().fromJson(json);			case 'HomeQuanguoTrendChart':
			return HomeQuanguoTrendChart().fromJson(json);			case 'HomeHbFeiHbTrendChart':
			return HomeHbFeiHbTrendChart().fromJson(json);			case 'HomeForeignTrendChart':
			return HomeForeignTrendChart().fromJson(json);			case 'HomeImportantForeignTrendChart':
			return HomeImportantForeignTrendChart().fromJson(json);			case 'HomeForeignTrendChartGlobal':
			return HomeForeignTrendChartGlobal().fromJson(json);			case 'HomeImportantForeignTrendChartGlobal':
			return HomeImportantForeignTrendChartGlobal().fromJson(json);			case 'HomeForeignStatistics':
			return HomeForeignStatistics().fromJson(json);			case 'HomeGlobalStatistics':
			return HomeGlobalStatistics().fromJson(json);			case 'TrendModel':
			return TrendModel().fromJson(json);			case 'TrendNewslist':
			return TrendNewslist().fromJson(json);			case 'RumoursModel':
			return RumoursModel().fromJson(json);			case 'RumoursNews':
			return RumoursNews().fromJson(json);			case 'MapDomesticModel':
			return MapDomesticModel().fromJson(json);			case 'MapDomesticNewslist':
			return MapDomesticNewslist().fromJson(json);			case 'MapDomesticNewslistCity':
			return MapDomesticNewslistCity().fromJson(json);			case 'FindWikiModel':
			return FindWikiModel().fromJson(json);			case 'FindWikiResult':
			return FindWikiResult().fromJson(json);			case 'HomeBannerModel':
			return HomeBannerModel().fromJson(json);			case 'HomeBannerData':
			return HomeBannerData().fromJson(json);			case 'HomeRumourModel':
			return HomeRumourModel().fromJson(json);			case 'MapDistributeModel':
			return MapDistributeModel().fromJson(json);			case 'MapDistributeResult':
			return MapDistribute().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'HomeModel':
			return List<HomeModel>();			case 'HomeMarquee':
			return List<HomeMarquee>();			case 'HomeQuanguoTrendChart':
			return List<HomeQuanguoTrendChart>();			case 'HomeHbFeiHbTrendChart':
			return List<HomeHbFeiHbTrendChart>();			case 'HomeForeignTrendChart':
			return List<HomeForeignTrendChart>();			case 'HomeImportantForeignTrendChart':
			return List<HomeImportantForeignTrendChart>();			case 'HomeForeignTrendChartGlobal':
			return List<HomeForeignTrendChartGlobal>();			case 'HomeImportantForeignTrendChartGlobal':
			return List<HomeImportantForeignTrendChartGlobal>();			case 'HomeForeignStatistics':
			return List<HomeForeignStatistics>();			case 'HomeGlobalStatistics':
			return List<HomeGlobalStatistics>();			case 'TrendModel':
			return List<TrendModel>();			case 'TrendNewslist':
			return List<TrendNewslist>();			case 'RumoursModel':
			return List<RumoursModel>();			case 'RumoursNews':
			return List<RumoursNews>();			case 'MapDomesticModel':
			return List<MapDomesticModel>();			case 'MapDomesticNewslist':
			return List<MapDomesticNewslist>();			case 'MapDomesticNewslistCity':
			return List<MapDomesticNewslistCity>();			case 'FindWikiModel':
			return List<FindWikiModel>();			case 'FindWikiResult':
			return List<FindWikiResult>();			case 'HomeBannerModel':
			return List<HomeBannerModel>();			case 'HomeBannerData':
			return List<HomeBannerData>();			case 'HomeRumourModel':
			return List<HomeRumourModel>();			case 'MapDistributeModel':
			return List<MapDistributeModel>();			case 'MapDistributeResult':
			return List<MapDistribute>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}